#################################### commands to deploy SFS Docker ####################################

# Build 
sudo docker-compose build
# Migrate database (It will become SECONDARY once loading the database will be performed )
sudo docker-compose run django python3 manage.py migrate
# Load datatbase
cat biosustainabilitydb-Backup-File_29-04-2019_18_23_43.sql | sudo docker exec -i $database_docker_name psql -Umigiwara  -d $database_name
# Run containers
sudo docker-compose up -d

#################################### Database commands ####################################

# connect to database docker
sudo docker exec -it biosensors_db_1 bash
psql --user migiwara -d sustainabilitydb
# Backup database
sudo docker exec -t -u postgres biosensors_db_1 pg_dumpall -c > dump_`date +%d-%m-%Y"_"%H_%M_%S`.sql
# Restore database snapshot
cat dump_20-09-2018_16_57_07.sql | sudo docker exec -i biosustainability_db_1 psql -Upostgres  -d $database_name
# Connect to docker image running the database
docker exec -it biosensors_db_1 bash
#How to Back Up a PostgreSQL Database Using pg_dump
pg_dump name_of_database > $name-Backup-File_`date +%d-%m-%Y"_"%H_%M_%S`.sql

#################################### CELERY commands ####################################
# Run celery worker
celery -A backend worker -l info -f celery.logs
# Run celery task scheduler `beat`
celery -A biosustainability beat -l info
# Purge previous pending tasks
celery -A backend purge
## force killing all celery processes
ps auxww | grep celery | grep -v "grep" | awk '{print $2}' | xargs kill -9
